[
    {
        "id": "76f32a46177fc4ba",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c4a84cee6284c497",
        "type": "http request",
        "z": "76f32a46177fc4ba",
        "name": "Get URL Based blogs",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.scripturecentral.org/proxy/api/blogs",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 680,
        "y": 300,
        "wires": [
            [
                "2cd189840a17327e"
            ]
        ]
    },
    {
        "id": "f25fd1e859dda773",
        "type": "function",
        "z": "76f32a46177fc4ba",
        "name": "Modify URL Based on type",
        "func": "var slug = \"blogs\";  // Replace with the actual slug\n\nvar slugToURLMapping = {\n    \"blogs\": \"https://scripturecentral.org/blogs\",\n    \"knowhy\": \"https://scripturecentral.org/knowhy\",\n    \"come-follow-me\": \"https://scripturecentral.org/come-follow-mellow-me.com\"\n};\n\nvar updatedURL = slugToURLMapping[slug];\n\nreturn { updatedURL: updatedURL };",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 380,
        "wires": [
            [
                "92f1e6a47a0535b2"
            ]
        ]
    },
    {
        "id": "92f1e6a47a0535b2",
        "type": "debug",
        "z": "76f32a46177fc4ba",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "8e219133f4238a3e",
        "type": "inject",
        "z": "76f32a46177fc4ba",
        "name": "blogs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "7db62192b9223f69"
            ]
        ]
    },
    {
        "id": "715b31f7e0c70d99",
        "type": "inject",
        "z": "76f32a46177fc4ba",
        "name": "knowhy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 270,
        "y": 260,
        "wires": [
            [
                "7db62192b9223f69"
            ]
        ]
    },
    {
        "id": "f0cf8e0dcf43a099",
        "type": "inject",
        "z": "76f32a46177fc4ba",
        "name": "come-follow-me",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "7db62192b9223f69"
            ]
        ]
    },
    {
        "id": "2cd189840a17327e",
        "type": "function",
        "z": "76f32a46177fc4ba",
        "name": "cheerio",
        "func": "var cheerio = require('cheerio');\n\n// Assume msg.payload contains the HTML content\nvar htmlContent = msg.payload;\n\n// Use Cheerio to extract information based on content types\nvar $ = cheerio.load(htmlContent);\n\nvar contentType;\nvar url;\n\n// Extract URL based on content type\nif (msg.contentType === \"blog\") {\n    url = $('meta[property=\"og:url\"]').attr('content');\n} else if (msg.contentType === \"come-follow-me\") {\n    url = $('meta[property=\"og:url\"]').attr('content');\n    // You may need to adjust this based on the actual HTML structure\n} else if (msg.contentType === \"knowhy\") {\n    url = $('meta[property=\"og:url\"]').attr('content');\n    // You may need to adjust this based on the actual HTML structure\n}\n\n// Set the extracted URL in the message payload\nmsg.payload = url;\n\n// Return the modified message object\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 340,
        "wires": [
            [
                "f25fd1e859dda773"
            ]
        ]
    },
    {
        "id": "7db62192b9223f69",
        "type": "sheet-to-json",
        "z": "76f32a46177fc4ba",
        "name": "get url from spreadsheet",
        "raw": "false",
        "range": "F2:F1561",
        "header": "default",
        "blankrows": false,
        "x": 610,
        "y": 260,
        "wires": [
            [
                "c4a84cee6284c497"
            ]
        ]
    }
]